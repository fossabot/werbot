syntax = "proto3";

package member;

option go_package = "github.com/werbot/werbot/internal/grpc/proto/member";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

import "user/user.proto";

service MemberHandlers {
    // Project section
    rpc ListMembers(ListMembers.Request) returns (ListMembers.Response) {}
    rpc GetMember(GetMember.Request) returns (GetMember.Response) {}
    rpc CreateMember(CreateMember.Request) returns (CreateMember.Response) {}
    rpc UpdateMember(UpdateMember.Request) returns (UpdateMember.Response) {}
    rpc DeleteMember(DeleteMember.Request) returns (DeleteMember.Response) {}

    rpc UpdateMemberActiveStatus(UpdateMemberActiveStatus.Request) returns (UpdateMemberActiveStatus.Response) {}

    // Used in finding and adding a new member to the project
    rpc GetUsersWithoutProject(GetUsersWithoutProject.Request) returns (GetUsersWithoutProject.Response) {}

    // Sending an invitation to add to the project
    rpc CreateMemberInvite(CreateMemberInvite.Request) returns (CreateMemberInvite.Response) {}

    // Serversection
    rpc ListServerMembers(ListServerMembers.Request) returns (ListServerMembers.Response) {}
    rpc GetServerMember(GetServerMember.Request) returns (GetServerMember.Response) {}
    rpc CreateServerMember(CreateServerMember.Request) returns (CreateServerMember.Response) {}
    rpc UpdateServerMember(UpdateServerMember.Request) returns (UpdateServerMember.Response) {}
    rpc DeleteServerMember(DeleteServerMember.Request) returns (DeleteServerMember.Response) {}
    rpc GetMemberWithoutServer(GetMemberWithoutServer.Request) returns (GetMemberWithoutServer.Response) {}

    // Search member by user id and return true if found or false
    rpc GetMemberByID(GetMemberByID.Request) returns (GetMemberByID.Response) {}

    // Use for Ajax search Users from first letters of name
    rpc GetUsersByName(GetUsersByName.Request) returns (GetUsersByName.Response) {}
}

// -----------------------------------------------------
// use in API in body request
message ActivityRequest {
    string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
    string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
    string name = 3;
}
// -----------------------------------------------------

// rpc ListMembers
message ListMembers {
    message Request {
        int32 limit = 1;
        int32 offset = 2;
        string sort_by = 3;
        string query = 4;
    }
    message Response {
        int32 total = 1;
        repeated GetMember.Response members = 2;
    }
}
// -----------------------------------------------------


// rpc GetMember
message GetMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string member_id = 3;
    }

    message Response {
        string owner_id = 1;
        string owner_name = 2;
        string project_id = 3;
        string project_name = 4;
        string member_id = 5;
        string user_id = 6;
        string user_name = 7;
        user.RoleUser role = 8;
        bool active = 9;
        bool online = 10;
        int32 servers_count = 11;
        google.protobuf.Timestamp created = 12;
    }

}
// -----------------------------------------------------


// rpc CreateMember
message CreateMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string user_id = 3     [(tagger.tags) = "validate:\"required,uuid\""];
        user.RoleUser role = 4;
        bool active = 5;
    }

    message Response {
        string member_id = 1;
    }
}
// -----------------------------------------------------


// rpc UpdateMember
message UpdateMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string member_id = 3   [(tagger.tags) = "validate:\"required,uuid\"  query:\"member_id\""];
        user.RoleUser role = 4;
        bool active = 5;
    }

    message Response {}
}
// -----------------------------------------------------


// rpc DeleteMember
message DeleteMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string member_id = 3   [(tagger.tags) = "validate:\"required,uuid\"  query:\"member_id\""];
    }

    message Response {}
}
// -----------------------------------------------------


// rpc UpdateMemberActiveStatus
message UpdateMemberActiveStatus {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"uuid\"           query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string member_id = 3   [(tagger.tags) = "validate:\"required,uuid\"  query:\"member_id\""];
        bool status = 4;
    }

    message Response {}
}
// -----------------------------------------------------


// rpc GetMemberByID
message GetMemberByID {
    message Request {
        string user_id = 1;
        string project_id = 2;
    }
    message Response {
        google.protobuf.BoolValue status = 1;
    }
}
// -----------------------------------------------------


// rpc GetUsersWithoutProject
message GetUsersWithoutProject {
    message Request {
        string owner_id = 1;
        string project_id = 2;
        string name = 3;
    }

    message Response {
        message User{
            int32 user_id = 1;
            string name = 2;
            string email = 3;
        }
        repeated User users = 1;
    }
}
// -----------------------------------------------------


// rpc CreateMemberInvite
message CreateMemberInvite {
    message Request {
        string owner_id = 1     [(tagger.tags) = "validate:\"uuid\"            query:\"owner_id\""];
        string project_id = 2   [(tagger.tags) = "validate:\"required,uuid\"   query:\"project_id\""];
        string user_name = 3    [(tagger.tags) = "validate:\"required,min=3\"  query:\"user_name\""];
        string user_surname = 4 [(tagger.tags) = "validate:\"required,min=3\"  query:\"user_surname\""];
        string email = 5        [(tagger.tags) = "validate:\"required,email\"  query:\"email\""];
    }

    message Response {}
}
// -----------------------------------------------------


// ListServerMembers 
message ListServerMembers {
    message Request {
        int32 limit = 1;
        int32 offset = 2;
        string sort_by = 3;
        string owner_id = 4    [(tagger.tags) = "validate:\"required,uuid\"  query:\"owner_id\""];
        string project_id = 5  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string server_id = 6   [(tagger.tags) = "validate:\"required,uuid\"  query:\"server_id\""];
    }

    message Response {
        int32 total = 1;
        repeated GetServerMember.Response accounts = 2;    
    }
}
// -----------------------------------------------------

// GetServerMember 
message GetServerMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"required,uuid\"  query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string server_id = 3   [(tagger.tags) = "validate:\"required,uuid\"  query:\"server_id\""];
        string account_id = 4;
    }

    message Response {
        string account_id = 1;
        string user_name = 2;
        string user_email = 3;
        bool active = 4;
        bool online = 5;
        google.protobuf.Timestamp last_activity = 6;
    }
}
// -----------------------------------------------------

// CreateServerMember
message CreateServerMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"required,uuid\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\""];
        string server_id = 3   [(tagger.tags) = "validate:\"required,uuid\""];
        string member_id = 4;
        bool active = 5;
    }

    message Response {
        int32 account_id = 1;
    }
}
// -----------------------------------------------------

// UpdateServerMember 
message UpdateServerMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"required,uuid\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\""];
        string server_id = 3   [(tagger.tags) = "validate:\"required,uuid\""];
        string account_id = 4;
        bool active = 5;
    }

    message Response {}
}
// -----------------------------------------------------

// DeleteServerMember 
message DeleteServerMember {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"required,uuid\"  query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uuid\"  query:\"project_id\""];
        string server_id = 3   [(tagger.tags) = "validate:\"uuid\"           query:\"server_id\""];
        string account_id = 4;
    }

    message Response {}
}
// -----------------------------------------------------

// rpc GetMemberWithoutServer
message GetMemberWithoutServer {
    message Request {
        string owner_id = 1    [(tagger.tags) = "validate:\"required,uuid\"  query:\"owner_id\""];
        string project_id = 2  [(tagger.tags) = "validate:\"required,uid\"   query:\"project_id\""];
        string server_id = 3   [(tagger.tags) = "validate:\"required,uuid\"  query:\"server_id\""];
        string name = 4;
    }
    message Response {
        message Member{
            string member_id = 1;
            string name = 2;
            string email = 3;
        }
        repeated Member members = 1;
    }
}
// -----------------------------------------------------


// rpc GetUsersByName
message GetUsersByName {
    message Request {
        string name = 1;
    }
    message Response {
        message SearchUsersResult {
            string member_id = 1;
            string member_name = 2;
            string email = 3;
        }
        repeated SearchUsersResult users = 2;
    }
}
// -----------------------------------------------------


